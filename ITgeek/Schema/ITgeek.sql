-- MySQL Script generated by MySQL Workbench
-- 11/09/15 12:04:50
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ITgeek
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ITgeek
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ITgeek` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `ITgeek` ;

-- -----------------------------------------------------
-- Table `ITgeek`.`urzytkownik`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`urzytkownik` (
  `id_urzytkownik` INT NOT NULL AUTO_INCREMENT,
  `imie` VARCHAR(45) NOT NULL,
  `nazwisko` VARCHAR(45) NULL,
  `data_urodzenia` DATE NOT NULL,
  `miejscowosc` VARCHAR(45) NULL,
  `wyswietlana_nazwa` VARCHAR(45) NOT NULL,
  `e-mail` VARCHAR(45) NOT NULL,
  `haslo` VARCHAR(45) NOT NULL,
  `uprawnienia` INT NULL,
  PRIMARY KEY (`id_urzytkownik`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`projekt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`projekt` (
  `id_projekt` INT NOT NULL AUTO_INCREMENT,
  `id_urzytkownik` INT NOT NULL,
  `nazwa_projektu` VARCHAR(45) NOT NULL,
  `wstep` VARCHAR(1000) NOT NULL,
  `rozwiniecie` VARCHAR(10000) NULL,
  `zakonczenie` VARCHAR(1000) NULL,
  `poziom_ukonczenia` INT NOT NULL,
  `uwagi_problemy` VARCHAR(500) NULL,
  PRIMARY KEY (`id_projekt`),
  INDEX `fk_projekt_urzytkownik1_idx` (`id_urzytkownik` ASC),
  CONSTRAINT `fk_projekt_urzytkownik1`
    FOREIGN KEY (`id_urzytkownik`)
    REFERENCES `ITgeek`.`urzytkownik` (`id_urzytkownik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`ocena_projektu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`ocena_projektu` (
  `id_ocena_projektu` INT NOT NULL AUTO_INCREMENT,
  `id_urzytkownik` INT NOT NULL,
  `id_projekt` INT NOT NULL,
  `ocena_projektu` INT NOT NULL,
  PRIMARY KEY (`id_ocena_projektu`),
  INDEX `fk_ocena_projektu_urzytkownik_idx` (`id_urzytkownik` ASC),
  INDEX `fk_ocena_projektu_projekt1_idx` (`id_projekt` ASC),
  CONSTRAINT `fk_ocena_projektu_urzytkownik`
    FOREIGN KEY (`id_urzytkownik`)
    REFERENCES `ITgeek`.`urzytkownik` (`id_urzytkownik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ocena_projektu_projekt1`
    FOREIGN KEY (`id_projekt`)
    REFERENCES `ITgeek`.`projekt` (`id_projekt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`zdjecia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`zdjecia` (
  `id_zdjecia` INT NOT NULL AUTO_INCREMENT,
  `id_projekt` INT NOT NULL,
  `nazwa_zdjecia` VARCHAR(45) NULL,
  `Zdjecie` MEDIUMBLOB NOT NULL,
  PRIMARY KEY (`id_zdjecia`),
  INDEX `fk_zdjecia_projekt1_idx` (`id_projekt` ASC),
  CONSTRAINT `fk_zdjecia_projekt1`
    FOREIGN KEY (`id_projekt`)
    REFERENCES `ITgeek`.`projekt` (`id_projekt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`kategoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`kategoria` (
  `id_kategoria` INT NOT NULL AUTO_INCREMENT,
  `nazwa_kategorii` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_kategoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`pozycja_kategorii`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`pozycja_kategorii` (
  `id_pozycja_kategorii` INT NOT NULL AUTO_INCREMENT,
  `id_projekt` INT NOT NULL,
  `id_kategoria` INT NOT NULL,
  PRIMARY KEY (`id_pozycja_kategorii`),
  INDEX `fk_pozycja_kategorii_projekt1_idx` (`id_projekt` ASC),
  INDEX `fk_pozycja_kategorii_kategoria1_idx` (`id_kategoria` ASC),
  CONSTRAINT `fk_pozycja_kategorii_projekt1`
    FOREIGN KEY (`id_projekt`)
    REFERENCES `ITgeek`.`projekt` (`id_projekt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pozycja_kategorii_kategoria1`
    FOREIGN KEY (`id_kategoria`)
    REFERENCES `ITgeek`.`kategoria` (`id_kategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`wideo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`wideo` (
  `id_wideo` INT NOT NULL AUTO_INCREMENT,
  `id_projekt` INT NOT NULL,
  `nazwa_wideo` VARCHAR(45) NULL,
  `format_wideo` VARCHAR(45) NULL,
  `plik_wideo` LONGBLOB NOT NULL,
  PRIMARY KEY (`id_wideo`),
  INDEX `fk_wideo_projekt1_idx` (`id_projekt` ASC),
  CONSTRAINT `fk_wideo_projekt1`
    FOREIGN KEY (`id_projekt`)
    REFERENCES `ITgeek`.`projekt` (`id_projekt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`pliki`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`pliki` (
  `id_pliki` INT NOT NULL AUTO_INCREMENT,
  `id_projekt` INT NOT NULL,
  `format_pliku` VARCHAR(45) NULL,
  `nazwa_pliku` VARCHAR(45) NULL,
  `plik` MEDIUMBLOB NOT NULL,
  PRIMARY KEY (`id_pliki`),
  INDEX `fk_pliki_projekt1_idx` (`id_projekt` ASC),
  CONSTRAINT `fk_pliki_projekt1`
    FOREIGN KEY (`id_projekt`)
    REFERENCES `ITgeek`.`projekt` (`id_projekt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`komentarz`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`komentarz` (
  `id_komentarz` INT NOT NULL AUTO_INCREMENT,
  `id_urzytkownik` INT NOT NULL,
  `tresc_komentarza` VARCHAR(500) NOT NULL,
  `id_projekt` INT NULL,
  PRIMARY KEY (`id_komentarz`),
  INDEX `fk_komentarz_urzytkownik1_idx` (`id_urzytkownik` ASC),
  INDEX `fk_komentarz_projekt1_idx` (`id_projekt` ASC),
  CONSTRAINT `fk_komentarz_urzytkownik1`
    FOREIGN KEY (`id_urzytkownik`)
    REFERENCES `ITgeek`.`urzytkownik` (`id_urzytkownik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_komentarz_projekt1`
    FOREIGN KEY (`id_projekt`)
    REFERENCES `ITgeek`.`projekt` (`id_projekt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`podkomentarz`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`podkomentarz` (
  `id_podkomentarz` INT NOT NULL AUTO_INCREMENT,
  `id_komentarz` INT NOT NULL,
  `id_urzytkownik` INT NOT NULL,
  `tresc_podkomentarza` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`id_podkomentarz`),
  INDEX `fk_podkomentarz_komentarz1_idx` (`id_komentarz` ASC),
  INDEX `fk_podkomentarz_urzytkownik1_idx` (`id_urzytkownik` ASC),
  CONSTRAINT `fk_podkomentarz_komentarz1`
    FOREIGN KEY (`id_komentarz`)
    REFERENCES `ITgeek`.`komentarz` (`id_komentarz`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_podkomentarz_urzytkownik1`
    FOREIGN KEY (`id_urzytkownik`)
    REFERENCES `ITgeek`.`urzytkownik` (`id_urzytkownik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`ocena_komentarza`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`ocena_komentarza` (
  `id_ocena_komentarza` INT NOT NULL AUTO_INCREMENT,
  `id_komentarz` INT NOT NULL,
  `id_urzytkownik` INT NOT NULL,
  `ocena_komentarza` INT NOT NULL,
  PRIMARY KEY (`id_ocena_komentarza`),
  INDEX `fk_ocena_komentarza_komentarz1_idx` (`id_komentarz` ASC),
  INDEX `fk_ocena_komentarza_urzytkownik1_idx` (`id_urzytkownik` ASC),
  CONSTRAINT `fk_ocena_komentarza_komentarz1`
    FOREIGN KEY (`id_komentarz`)
    REFERENCES `ITgeek`.`komentarz` (`id_komentarz`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ocena_komentarza_urzytkownik1`
    FOREIGN KEY (`id_urzytkownik`)
    REFERENCES `ITgeek`.`urzytkownik` (`id_urzytkownik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ITgeek`.`ocena_podkomentarza`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITgeek`.`ocena_podkomentarza` (
  `id_ocena_podkomentarza` INT NOT NULL AUTO_INCREMENT,
  `id_podkomentarz` INT NOT NULL,
  `id_urzytkownik` INT NOT NULL,
  `ocena_podkomentarza` INT NOT NULL,
  PRIMARY KEY (`id_ocena_podkomentarza`),
  INDEX `fk_ocena_podkomentarza_podkomentarz1_idx` (`id_podkomentarz` ASC),
  INDEX `fk_ocena_podkomentarza_urzytkownik1_idx` (`id_urzytkownik` ASC),
  CONSTRAINT `fk_ocena_podkomentarza_podkomentarz1`
    FOREIGN KEY (`id_podkomentarz`)
    REFERENCES `ITgeek`.`podkomentarz` (`id_podkomentarz`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ocena_podkomentarza_urzytkownik1`
    FOREIGN KEY (`id_urzytkownik`)
    REFERENCES `ITgeek`.`urzytkownik` (`id_urzytkownik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
